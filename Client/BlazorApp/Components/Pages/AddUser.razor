@page "/adduser"
@using BlazorApp.Auth
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager NavMgr

@attribute [Authorize]

<PageTitle>AddUser</PageTitle>

<div class="register-container">
    <button class="logout-button" @onclick="Logout">Log Out</button>
    <h1 class="page-title">Add a new User</h1>

    <AuthorizeView>
        <Authorized>
            <div class="form-container">
                <label for="username" class="form-label">Username:</label>
                <input type="text" id="username" @bind="userName" class="input-field" placeholder="Enter your username" />

                <label for="password" class="form-label">Password:</label>
                <input type="password" id="password" @bind="password" class="input-field" placeholder="Enter your password" />

                <label for="email" class="form-label">Email:</label>
                <input type="email" id="email" @bind="email" class="input-field" placeholder="Enter your email" />

                @if (!string.IsNullOrEmpty(errorLabel))
                {
                <div class="alert alert-danger mt-3">@errorLabel</div>
                }
                @if (!string.IsNullOrEmpty(successMessage))
                {
                <div class="alert alert-success mt-3">@successMessage</div>
                }
                <button type="button" class="primary-button" @onclick="AddUserAsync">Add</button>
            </div>
        </Authorized>
    </AuthorizeView>
</div>

@code {
private string userName;
private string password;
private string email;
private string errorLabel;
private string successMessage;

private async Task AddUserAsync()
{
    errorLabel = "";
    successMessage = "";
    try
    {
        await ((SimpleAuthProvider)AuthProvider).AddUserAsync(userName, password, email);
        successMessage = "User created successfully!";
        errorLabel = null;
    }
    catch (Exception e)
    {
        errorLabel = $"Error: {e.Message}";
        successMessage = null;
    }
}

private async Task Logout()
{
    var authProvider = (SimpleAuthProvider)AuthProvider;
    await authProvider.Logout();
    NavMgr.NavigateTo("login");
}
}

<style>
    /* Base styling */
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        overflow: hidden;
    }

    .register-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;
        height: 100vh;
        text-align: center;
        background-color: #f8f9fa;
        padding: 40px 20px;
        overflow: hidden;
        position: relative; /* To position the logout button */
    }

    .page-title {
        font-size: 2.5rem;
        color: #007bff;
        margin-bottom: 30px;
        font-weight: 600;
    }

    .form-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 100%;
        max-width: 400px;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        background-color: white;
        animation: fadeIn 0.3s ease-in-out;
    }

    .form-label {
        font-weight: 600;
        margin-bottom: 5px;
        text-align: left;
        width: 100%;
        color: #007bff;
    }

    .input-field {
        width: 100%;
        padding: 12px;
        margin-bottom: 15px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 1rem;
    }

    .primary-button {
        background-color: #007bff;
        color: white;
        padding: 12px 24px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 1.1rem;
        width: 100%;
        max-width: 300px;
        transition: background-color 0.3s;
    }

    .primary-button:hover {
        background-color: #0056b3;
    }

    .logout-button {
        background-color: white;
        color: red;
        position: absolute;
        top: 20px;
        right: 20px;
        font-size: 1rem;
        padding: 8px 16px;
        border-radius: 4px;
        border: 2px solid red;
        cursor: pointer;
    }

    .logout-button:hover {
        background-color: red;
        color: white;
    }

    .alert {
        font-size: 0.9rem;
        padding: 10px;
        border-radius: 5px;
        width: 100%;
        margin-top: 10px;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #dc3545;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #28a745;
    }
</style>
    